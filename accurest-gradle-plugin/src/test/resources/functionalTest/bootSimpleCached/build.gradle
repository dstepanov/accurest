buildscript {
	repositories {
		mavenCentral()
	}
}

group = 'io.codearte.accurest.testprojects'

configurations {
	all {
		resolutionStrategy {
			eachDependency { DependencyResolveDetails details ->
				// To prevent an accidental usage of groovy-all.jar and groovy.jar in different versions
				// all modularized Groovy jars are replaced with groovy-all.jar by default.
				if (details.requested.group == 'org.codehaus.groovy' && details.requested.name != "groovy-all") {
					details.useTarget("org.codehaus.groovy:groovy-all:${details.requested.version}")
				}
			}
		}
	}
}


project(":module-impl") {
	apply plugin: 'java'

	repositories {
		mavenCentral()
		mavenLocal()
	}

	dependencies {
		compile "org.springframework:spring-web:$springVersion"
		compile "org.springframework:spring-context-support:$springVersion"
		compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
	}

}

project(":module-tests") {

	ext {
		contractsDir = file("repository/mappings")
		stubsOutputDirRoot = file("${project.buildDir}/production/${project.name}-stubs/")
		wireMockStubsOutputDir = file(new File(stubsOutputDirRoot, 'repository/mappings/'))
		contractsOutputDir = file(new File(stubsOutputDirRoot, 'repository/accurest/'))
	}

	apply plugin: 'groovy'
	apply plugin: 'accurest'
	apply plugin: 'maven-publish'

	repositories {
		mavenCentral()
		mavenLocal()
	}

	dependencies {
		compile project(":module-impl")
		compile "org.codehaus.groovy:groovy-all:2.4.10"
		compile 'com.jayway.jsonpath:json-path-assert:2.2.0'

		testCompile "com.github.tomakehurst:wiremock:2.0.10-beta"
		testCompile "org.spockframework:spock-spring:1.1-groovy-2.4"
		testCompile "com.jayway.restassured:rest-assured:$restAssuredVersion"
		testCompile "com.jayway.restassured:spring-mock-mvc:$restAssuredVersion"
		testCompile "ch.qos.logback:logback-classic:1.1.2"

	}

	accurest {
		baseClassForTests = 'com.ofg.twitter.places.BaseMockMvcSpec'
		basePackageForTests = 'accurest'
		contractsDslDir = contractsDir
		generatedTestSourcesDir = file("${project.buildDir}/extra-generated-sources/")
		stubsOutputDir = wireMockStubsOutputDir
		targetFramework = 'Spock'
	}

//TODO: Put it into the plugin
	task createWireMockStubsOutputDir << {
		wireMockStubsOutputDir.mkdirs()
	}

	generateWireMockClientStubs.dependsOn { createWireMockStubsOutputDir }
	generateAccurest.dependsOn generateWireMockClientStubs

	task copyContracts(type: Copy) {
		from contractsDir
		include '**/*.groovy'
		into contractsOutputDir
	}

	task stubsJar(type: Jar, dependsOn: ["generateWireMockClientStubs", copyContracts]) {
		baseName = "${project.name}"
		classifier = "stubs"
		from stubsOutputDirRoot
	}

	artifacts {
		archives stubsJar
	}

	publishing {
		publications {
			stubs(MavenPublication) {
				artifactId "${project.name}-stubs"
				artifact stubsJar
			}
		}
	}

	test {
		testLogging {
			exceptionFormat = 'full'
		}
	}

}

